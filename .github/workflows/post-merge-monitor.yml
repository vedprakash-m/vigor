name: Post-Merge Monitoring

on:
  push:
    branches:
      - main
      - master
      - production
      - release/*

jobs:
  verify-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: "backend/requirements.txt"

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        id: build-frontend
        run: |
          cd frontend
          npm run build
        continue-on-error: true

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        id: test-backend
        run: |
          cd backend
          pytest -v
        continue-on-error: true

      - name: Check build status
        id: check-status
        run: |
          if [[ "${{ steps.build-frontend.outcome }}" != "success" || "${{ steps.test-backend.outcome }}" != "success" ]]; then
            echo "status=failed" >> $GITHUB_OUTPUT
            echo "::error::Post-merge verification failed!"
            exit 0  # Don't fail the workflow yet - we need to notify team
          else
            echo "status=success" >> $GITHUB_OUTPUT
            echo "::notice::Post-merge verification successful!"
          fi

      - name: Get commit details
        if: steps.check-status.outputs.status == 'failed'
        id: commit-details
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          PR_NUMBER=$(echo "$COMMIT_MSG" | grep -o '#[0-9]\+' | head -1 | tr -d '#')
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Notify on Slack
        if: steps.check-status.outputs.status == 'failed'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "⚠️ Main Branch Build Failed"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Recent Commit:* ${{ steps.commit-details.outputs.message }}\n*Author:* ${{ steps.commit-details.outputs.author }}\n*PR:* #${{ steps.commit-details.outputs.pr_number }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Build Logs:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Build Logs"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "style": "primary"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Create issue for failed build
        if: steps.check-status.outputs.status == 'failed'
        run: |
          gh issue create \
            --title "🚨 Main branch build failed after merge of PR #${{ steps.commit-details.outputs.pr_number }}" \
            --body "The main branch build failed after merging PR #${{ steps.commit-details.outputs.pr_number }}.

            **Commit:** ${{ steps.commit-details.outputs.message }}
            **Author:** ${{ steps.commit-details.outputs.author }}

            [View Build Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            cc: @${{ github.repository_owner }}" \
            --label "broken-build,priority-high"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Consider auto-rollback
        if: steps.check-status.outputs.status == 'failed' && false # Disabled by default - change to true to enable
        run: |
          echo "::warning::Auto-rollback is currently disabled. To enable, modify the 'Consider auto-rollback' step condition."

          # When enabled, this would perform:
          # git revert ${{ github.sha }} --no-edit
          # git push origin main

      - name: Update status badge
        run: |
          if [[ "${{ steps.check-status.outputs.status }}" == "success" ]]; then
            BADGE_COLOR="brightgreen"
            BADGE_TEXT="passing"
          else
            BADGE_COLOR="red"
            BADGE_TEXT="failing"
          fi

          BADGE_URL="https://img.shields.io/badge/build-${BADGE_TEXT}-${BADGE_COLOR}"

          # Store the badge URL in a file for other workflows to use
          mkdir -p .github/status
          echo "$BADGE_URL" > .github/status/build-badge.txt

          # Optional: commit and push the badge status
          # git config --global user.name "GitHub Actions"
          # git config --global user.email "actions@github.com"
          # git add .github/status/build-badge.txt
          # git commit -m "Update build status badge [skip ci]"
          # git push origin ${{ github.ref_name }}
