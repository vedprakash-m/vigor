name: Deploy Modernized Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "prod"
        type: choice
        options:
          - prod
      force_deployment:
        description: "Force deployment even if no changes detected"
        required: false
        default: false
        type: boolean

env:
  AZURE_RESOURCEGROUP_NAME: vigor-rg
  AZURE_LOCATION: Central US

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          az group create \
            --name ${{ env.AZURE_RESOURCEGROUP_NAME }} \
            --location "${{ env.AZURE_LOCATION }}" \
            --tags Environment=${{ github.event.inputs.environment }} Project=vigor-modernized

      - name: Validate Bicep Template
        run: |
          cd infrastructure/bicep
          az deployment group validate \
            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
            --template-file main-modernized.bicep \
            --parameters environment=${{ github.event.inputs.environment }} \
                        secretKey="${{ secrets.JWT_SECRET_KEY }}" \
                        geminiApiKey="${{ secrets.GOOGLE_AI_API_KEY }}"

      - name: Deploy Infrastructure
        run: |
          cd infrastructure/bicep
          DEPLOYMENT_NAME="vigor-modernized-$(date +%Y%m%d-%H%M%S)"

          az deployment group create \
            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
            --name $DEPLOYMENT_NAME \
            --template-file main-modernized.bicep \
            --parameters environment=${{ github.event.inputs.environment }} \
                        secretKey="${{ secrets.JWT_SECRET_KEY }}" \
                        geminiApiKey="${{ secrets.GOOGLE_AI_API_KEY }}"

          # Store deployment outputs as job outputs
          echo "FUNCTION_APP_NAME=$(az deployment group show --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name $DEPLOYMENT_NAME --query properties.outputs.functionAppName.value -o tsv)" >> $GITHUB_OUTPUT
          echo "FUNCTION_APP_URL=$(az deployment group show --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name $DEPLOYMENT_NAME --query properties.outputs.functionAppUrl.value -o tsv)" >> $GITHUB_OUTPUT
          echo "STATIC_WEB_APP_URL=$(az deployment group show --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} --name $DEPLOYMENT_NAME --query properties.outputs.staticWebAppUrl.value -o tsv)" >> $GITHUB_OUTPUT
        id: deploy

      - name: Deploy Function App Code
        run: |
          # Create a temporary zip of the functions directory
          cd functions
          zip -r ../function-app.zip . -x "*.pyc" "__pycache__/*" ".git/*"
          cd ..

          # Deploy to Azure Functions
          az functionapp deployment source config-zip \
            --resource-group ${{ env.AZURE_RESOURCEGROUP_NAME }} \
            --name ${{ steps.deploy.outputs.FUNCTION_APP_NAME }} \
            --src function-app.zip

      - name: Configure Static Web App
        run: |
          echo "Static Web App URL: ${{ steps.deploy.outputs.STATIC_WEB_APP_URL }}"
          echo "Function App URL: ${{ steps.deploy.outputs.FUNCTION_APP_URL }}"
          echo "Please configure the Static Web App repository connection manually in the Azure Portal"

      - name: Deployment Summary
        run: |
          echo "## ðŸš€ Modernized Infrastructure Deployed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“‹ Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Resource Group**: ${{ env.AZURE_RESOURCEGROUP_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Function App**: ${{ steps.deploy.outputs.FUNCTION_APP_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Function App URL**: ${{ steps.deploy.outputs.FUNCTION_APP_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Static Web App URL**: ${{ steps.deploy.outputs.STATIC_WEB_APP_URL }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸŽ¯ Architecture Modernization Complete" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Single resource group (vigor-rg)" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Azure Functions with Consumption Plan" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Cosmos DB NoSQL database" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Single LLM provider (Gemini Flash 2.5)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“Š Expected Cost Reduction" >> $GITHUB_STEP_SUMMARY
          echo "- **Before**: ~$100/month (App Service + PostgreSQL)" >> $GITHUB_STEP_SUMMARY
          echo "- **After**: ~$30-50/month (Functions + Cosmos DB)" >> $GITHUB_STEP_SUMMARY
          echo "- **Savings**: 40-70% cost reduction" >> $GITHUB_STEP_SUMMARY
