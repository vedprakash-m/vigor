name: Auto Merge PR Workflow

on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - labeled

# Only 1 job can use the auto-merge concurrency group at a time
concurrency:
  group: auto-merge
  cancel-in-progress: false

jobs:
  triage:
    name: PR Triage and Validation
    runs-on: ubuntu-latest
    # Don't run on draft PRs or from forks
    if: github.event.pull_request.draft == false && github.event.pull_request.head.repo.full_name == github.repository
    outputs:
      is-small-pr: ${{ steps.analyze-pr.outputs.is-small-pr }}
      is-hotfix: ${{ steps.analyze-pr.outputs.is-hotfix }}
      has-tests: ${{ steps.analyze-pr.outputs.has-tests }}
      auto-merge-eligible: ${{ steps.analyze-pr.outputs.auto-merge-eligible }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Analyze PR
        id: analyze-pr
        run: |
          # Get PR changes count (excluding package-lock.json, etc.)
          PR_CHANGES=$(git diff --stat origin/${{ github.event.pull_request.base.ref }} | grep -v "package-lock.json\|yarn.lock" | tail -1 | awk '{print $1+$3}')
          echo "Total changes (excluding lock files): $PR_CHANGES"

          # Check if PR is small (≤ 300 LOC)
          IS_SMALL_PR="false"
          if [ "$PR_CHANGES" -le "300" ]; then
            IS_SMALL_PR="true"
            echo "PR is small (≤ 300 LOC)"
          else
            echo "PR is large (> 300 LOC)"
          fi

          # Check if PR is a hotfix
          IS_HOTFIX="false"
          if [[ "${{ github.event.pull_request.head.ref }}" == hotfix/* ]]; then
            IS_HOTFIX="true"
            echo "PR is a hotfix"
          else
            echo "PR is not a hotfix"
          fi

          # Check if PR has tests
          HAS_TESTS="false"
          if git diff --name-only origin/${{ github.event.pull_request.base.ref }} | grep -q "_test\|test_\|\.spec\.\|\.test\." ; then
            HAS_TESTS="true"
            echo "PR includes test files"
          elif [ "$IS_HOTFIX" == "true" ]; then
            # Hotfixes can sometimes skip tests
            HAS_TESTS="true"
            echo "PR is a hotfix, test requirement waived"
          else
            echo "PR does not include test files"
          fi

          # Only auto-merge eligible if meets criteria
          AUTO_MERGE_ELIGIBLE="false"
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') }}" == "true" &&
                "$IS_SMALL_PR" == "true" &&
                "$HAS_TESTS" == "true" ]]; then
            AUTO_MERGE_ELIGIBLE="true"
            echo "PR is eligible for auto-merge"
          else
            echo "PR is not eligible for auto-merge"
          fi

          # Output results
          echo "is-small-pr=$IS_SMALL_PR" >> $GITHUB_OUTPUT
          echo "is-hotfix=$IS_HOTFIX" >> $GITHUB_OUTPUT
          echo "has-tests=$HAS_TESTS" >> $GITHUB_OUTPUT
          echo "auto-merge-eligible=$AUTO_MERGE_ELIGIBLE" >> $GITHUB_OUTPUT

      - name: PR Status Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const isSmallPr = '${{ steps.analyze-pr.outputs.is-small-pr }}' === 'true';
            const isHotfix = '${{ steps.analyze-pr.outputs.is-hotfix }}' === 'true';
            const hasTests = '${{ steps.analyze-pr.outputs.has-tests }}' === 'true';
            const autoMergeEligible = '${{ steps.analyze-pr.outputs.auto-merge-eligible }}' === 'true';

            const statusChecks = [
              { name: "Small PR (≤ 300 LOC)", status: isSmallPr ? "✅" : "❌" },
              { name: "Has Tests or Hotfix", status: hasTests ? "✅" : "❌" },
              { name: "Auto-merge Label", status: '${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') }}' === 'true' ? "✅" : "❌" }
            ];

            let comment = `## PR Validation Status\n\n`;
            comment += statusChecks.map(check => `- ${check.status} ${check.name}`).join('\n');

            if (autoMergeEligible) {
              comment += '\n\n✨ **Auto-merge eligible!** Will merge after required checks pass.\n';
            } else {
              comment += '\n\n⚠️ **Not eligible for auto-merge**\n';
              comment += 'To enable auto-merge:\n';
              if (!isSmallPr) comment += '- Reduce PR size to ≤ 300 LOC\n';
              if (!hasTests) comment += '- Include tests (unless hotfix)\n';
              if ('${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') }}' !== 'true') {
                comment += '- Add the `auto-merge` label\n';
              }
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  auto-merge:
    name: Auto Merge PR
    needs: triage
    runs-on: ubuntu-latest
    if: ${{ needs.triage.outputs.auto-merge-eligible == 'true' }}
    steps:
      - name: Wait for required checks
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20
          running-workflow-name: Auto Merge PR # Don't wait for this workflow

      - name: Auto-merge PR
        if: ${{ success() }}
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: squash
          MERGE_COMMIT_MESSAGE: "pull-request-title"
          MERGE_FORKS: false
          MERGE_RETRIES: 3
          MERGE_RETRY_SLEEP: 30000
          MERGE_DELETE_BRANCH: true
