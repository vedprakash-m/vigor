---
name: Production Deployment

on:
  push:
    branches: [main]
    paths-ignore:
      - "*.md"
      - "docs/**"
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  id-token: write # Required for OIDC authentication with Azure

jobs:
  validate-infrastructure:
    name: Validate Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Bicep templates
        run: |
          az bicep build --file infrastructure/bicep/main.bicep

  deploy-to-production:
    name: Deploy to Production
    needs: validate-infrastructure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Backend
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "backend/requirements.txt"

      - name: Build Backend
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Setup Frontend
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Configure App Settings
        uses: azure/appservice-settings@v1
        with:
          app-name: vigor-backend
          app-settings-json: |
            [
              {
                "name": "DATABASE_URL",
                "value": "${{ secrets.DATABASE_URL }}",
                "slotSetting": false
              },
              {
                "name": "SECRET_KEY",
                "value": "${{ secrets.SECRET_KEY }}",
                "slotSetting": false
              },
              {
                "name": "OPENAI_API_KEY",
                "value": "${{ secrets.OPENAI_API_KEY }}",
                "slotSetting": false
              },
              {
                "name": "ENVIRONMENT",
                "value": "production",
                "slotSetting": false
              },
              {
                "name": "DEBUG",
                "value": "false",
                "slotSetting": false
              },
              {
                "name": "LLM_PROVIDER",
                "value": "${{ secrets.LLM_PROVIDER || 'fallback' }}",
                "slotSetting": false
              },
              {
                "name": "KEY_VAULT_PROVIDER",
                "value": "azure",
                "slotSetting": false
              },
              {
                "name": "AZURE_KEY_VAULT_URL",
                "value": "${{ secrets.AZURE_KEY_VAULT_URL }}",
                "slotSetting": false
              }
            ]

      - name: Deploy to Production Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: vigor-backend
          package: ./backend
          slot-name: production

      # Note: Database migrations should be handled by the application startup
      # The app will automatically create tables on first run

  verify-deployment:
    name: Verify Production Deployment
    needs: deploy-to-production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run health checks
        env:
          ENDPOINT_URL: https://vigor-backend.azurewebsites.net
        run: ./scripts/health-check.sh production

      - name: Run smoke tests
        env:
          ENDPOINT_URL: https://vigor-backend.azurewebsites.net
        run: ./scripts/run-smoke-tests.sh production
