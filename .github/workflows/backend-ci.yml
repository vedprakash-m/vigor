---
name: Backend CI/CD

on:
  push:
    branches: [main, develop, staging]
    paths: ["backend/**"]
  pull_request:
    branches: [main, develop]
    paths: ["backend/**"]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  backend-quality-checks:
    name: Backend Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "backend/requirements.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort flake8 bandit mypy pytest pytest-cov safety

      - name: Code formatting check (black)
        run: black --check --diff .

      - name: Import sorting check (isort)
        run: isort --check-only --diff .

      - name: Linting (flake8)
        run: flake8 .

      - name: Security scan (bandit)
        run: |
          bandit -c .bandit -r . -f json -o bandit_report.json
          # Only fail on high severity issues
          bandit -c .bandit -r . --severity-level high

      - name: Type checking (mypy)
        run: mypy . --config-file=mypy.ini

      - name: Dependency security check (safety)
        run: safety check --output json > safety_report.json

      - name: Run tests
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html -v

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: |
            bandit_report.json
            safety_report.json
            coverage.xml
            htmlcov/
