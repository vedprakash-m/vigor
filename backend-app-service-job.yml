name: Deploy Backend to App Service
    runs-on: ubuntu-latest
    needs: [build-backend, validate-infra]
    if: ${{ env.USE_DIRECT_DEPLOYMENT == 'true' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
          cache-dependency-path: "./backend/requirements.txt"

      - name: Install dependencies
        run: |
          echo "ğŸ“¦ Installing backend dependencies..."
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare deployment package
        run: |
          echo "ğŸ”§ Preparing deployment package..."
          cd backend

          # Create a deployment script for Azure App Service
          cat > startup.sh << EOL
          #!/bin/bash
          cd /home/site/wwwroot

          # Ensure proper activation of the environment
          source /opt/python/latest/env/bin/activate

          # Start Gunicorn with proper worker configuration
          gunicorn main:app --workers=4 --worker-class=uvicorn.workers.UvicornWorker --bind=0.0.0.0:8000
          EOL

          chmod +x startup.sh

          # Compress the application for deployment
          zip -r ../backend-deployment.zip . -x "*.pyc" "__pycache__/*" "*.git*" "tests/*" "venv/*"

          echo "âœ… Deployment package created"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'vigor-backend'
          package: './backend-deployment.zip'

      - name: Run database migrations
        run: |
          echo "ğŸ”„ Running database migrations..."
          cd backend
          python -c "from database.init_db import init_database; init_database()"
