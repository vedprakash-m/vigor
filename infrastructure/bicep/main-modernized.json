{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.177.2456",
      "templateHash": "7530646599231792377"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "Central US",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "vigor",
      "metadata": {
        "description": "Application name"
      }
    },
    "secretKey": {
      "type": "securestring",
      "metadata": {
        "description": "Secret key for JWT tokens"
      }
    },
    "geminiApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Google Gemini API key (single LLM provider)"
      }
    }
  },
  "variables": {
    "commonTags": {
      "Environment": "[parameters('environment')]",
      "Application": "[parameters('appName')]",
      "ManagedBy": "bicep",
      "Project": "vigor-fitness-modernized",
      "CostCenter": "engineering",
      "Architecture": "serverless"
    },
    "functionAppName": "vigor-functions",
    "staticWebAppName": "vigor-frontend",
    "cosmosDbAccountName": "[format('vigor-cosmos-{0}', parameters('environment'))]",
    "storageAccountName": "[format('vigorsa{0}', uniqueString(resourceGroup().id))]",
    "keyVaultName": "[format('vigor-kv-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsName": "vigor-ai",
    "logAnalyticsName": "vigor-la"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[if(equals(parameters('environment'), 'production'), 90, 30)]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard",
        "enableAutomaticFailover": false,
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', variables('cosmosDbAccountName'), 'vigor_db')]",
      "properties": {
        "resource": {
          "id": "vigor_db"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'vigor_db', 'users')]",
      "properties": {
        "resource": {
          "id": "users",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'vigor_db')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'vigor_db', 'workouts')]",
      "properties": {
        "resource": {
          "id": "workouts",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'vigor_db')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'vigor_db', 'workout_logs')]",
      "properties": {
        "resource": {
          "id": "workout_logs",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'vigor_db')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', variables('cosmosDbAccountName'), 'vigor_db', 'ai_coach_messages')]",
      "properties": {
        "resource": {
          "id": "ai_coach_messages",
          "partitionKey": {
            "paths": [
              "/userId"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true
          },
          "defaultTtl": 2592000
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosDbAccountName'), 'vigor_db')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enablePurgeProtection": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'secret-key')]",
      "properties": {
        "value": "[parameters('secretKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'gemini-api-key')]",
      "properties": {
        "value": "[parameters('geminiApiKey')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'cosmos-connection-string')]",
      "properties": {
        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2023-04-15').connectionStrings[0].connectionString]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), variables('functionAppName'), 'Key Vault Secrets User')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.Resources/deployments', 'functionApp'), '2022-09-01').outputs.functionAppPrincipalId.value]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'functionApp')]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', variables('cosmosDbAccountName'))]",
      "name": "[guid(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), variables('functionAppName'), 'Cosmos DB Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00000000-0000-0000-0000-000000000002')]",
        "principalId": "[reference(resourceId('Microsoft.Resources/deployments', 'functionApp'), '2022-09-01').outputs.functionAppPrincipalId.value]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'functionApp')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "functionApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('functionAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').ConnectionString]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
          },
          "storageAccountName": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountKey": {
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2023-01-01').keys[0].value]"
          },
          "cosmosDbEndpoint": {
            "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
          },
          "cosmosDbKey": {
            "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2023-04-15').primaryMasterKey]"
          },
          "geminiApiKey": {
            "value": "[parameters('geminiApiKey')]"
          },
          "secretKey": {
            "value": "[parameters('secretKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "3985679761729446471"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountKey": {
              "type": "securestring"
            },
            "cosmosDbEndpoint": {
              "type": "string"
            },
            "cosmosDbKey": {
              "type": "securestring"
            },
            "geminiApiKey": {
              "type": "securestring"
            },
            "secretKey": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('name')))]",
                "siteConfig": {
                  "linuxFxVersion": "Python|3.11",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(parameters('name'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "python"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "COSMOS_DB_ENDPOINT",
                      "value": "[parameters('cosmosDbEndpoint')]"
                    },
                    {
                      "name": "COSMOS_DB_KEY",
                      "value": "[parameters('cosmosDbKey')]"
                    },
                    {
                      "name": "COSMOS_DB_DATABASE",
                      "value": "vigor_db"
                    },
                    {
                      "name": "AI_PROVIDER",
                      "value": "gemini-flash-2.5"
                    },
                    {
                      "name": "GOOGLE_AI_API_KEY",
                      "value": "[parameters('geminiApiKey')]"
                    },
                    {
                      "name": "AI_MONTHLY_BUDGET",
                      "value": "50"
                    },
                    {
                      "name": "AI_COST_THRESHOLD",
                      "value": "40"
                    },
                    {
                      "name": "JWT_SECRET_KEY",
                      "value": "[parameters('secretKey')]"
                    },
                    {
                      "name": "ENVIRONMENT",
                      "value": "production"
                    },
                    {
                      "name": "LOG_LEVEL",
                      "value": "INFO"
                    },
                    {
                      "name": "AZURE_TENANT_ID",
                      "value": "VED"
                    },
                    {
                      "name": "AZURE_DOMAIN_ID",
                      "value": "vedid.onmicrosoft.com"
                    },
                    {
                      "name": "AZURE_MAX_CONCURRENT_USERS",
                      "value": "100"
                    }
                  ]
                },
                "httpsOnly": true,
                "clientAffinityEnabled": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('name')))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}-plan', parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic"
              },
              "properties": {
                "reserved": true
              }
            }
          ],
          "outputs": {
            "functionAppName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "functionAppUrl": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01').defaultHostName)]"
            },
            "functionAppPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "staticWebApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('staticWebAppName')]"
          },
          "location": {
            "value": "East US 2"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "functionAppUrl": {
            "value": "[format('https://{0}.azurewebsites.net', variables('functionAppName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "15387845898089948367"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "functionAppUrl": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/staticSites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Free",
                "tier": "Free"
              },
              "properties": {
                "buildProperties": {
                  "skipGithubActionWorkflowGeneration": true,
                  "appLocation": "/frontend",
                  "apiLocation": "",
                  "outputLocation": "dist",
                  "appBuildCommand": "npm run build",
                  "apiBuildCommand": ""
                },
                "enterpriseGradeCdnStatus": "Disabled"
              }
            },
            {
              "type": "Microsoft.Web/staticSites/config",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
              "properties": {
                "VITE_API_BASE_URL": "[parameters('functionAppUrl')]",
                "VITE_ENVIRONMENT": "production"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/staticSites', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "staticWebAppName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "staticWebAppUrl": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('name')), '2023-01-01').defaultHostname)]"
            },
            "repositoryUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', parameters('name')), '2023-01-01').repositoryUrl]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionApp'), '2022-09-01').outputs.functionAppName.value]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'functionApp'), '2022-09-01').outputs.functionAppUrl.value]"
    },
    "staticWebAppUrl": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'staticWebApp'), '2022-09-01').outputs.staticWebAppUrl.value]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}