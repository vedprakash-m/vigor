{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "7244426308634796469"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment name (prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "vigor",
      "metadata": {
        "description": "Application name"
      }
    },
    "postgresAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "PostgreSQL admin username"
      }
    },
    "postgresAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "PostgreSQL admin password"
      }
    },
    "secretKey": {
      "type": "securestring",
      "metadata": {
        "description": "Secret key for JWT tokens"
      }
    },
    "adminEmail": {
      "type": "string",
      "metadata": {
        "description": "Admin email address"
      }
    },
    "openaiApiKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "OpenAI API key"
      }
    },
    "geminiApiKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Gemini API key"
      }
    },
    "perplexityApiKey": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Perplexity API key"
      }
    },
    "appServiceSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "App Service SKU"
      }
    },
    "databaseResourceGroup": {
      "type": "string",
      "defaultValue": "vigor-db-rg",
      "metadata": {
        "description": "Resource group name where database resources (PostgreSQL) will live. Allows you to delete the app RG without losing data."
      }
    },
    "deployContainerRegistry": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Deploy Azure Container Registry (set to true only if you need a new ACR)."
      }
    },
    "useDirectDeployment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Use direct App Service deployment instead of containers (true for new architecture, false for legacy)"
      }
    }
  },
  "variables": {
    "commonTags": {
      "Environment": "[parameters('environment')]",
      "Application": "[parameters('appName')]",
      "ManagedBy": "bicep",
      "Project": "vigor-fitness",
      "CostCenter": "engineering"
    },
    "appServicePlanName": "vigor-app-plan",
    "backendWebAppName": "vigor-backend",
    "frontendAppName": "vigor-frontend",
    "functionAppName": "vigor-ai-functions",
    "staticWebAppName": "vigor-static-webapp",
    "postgresServerName": "vigor-db-server",
    "storageAccountName": "vigorsa99",
    "keyVaultName": "vigor-kv",
    "appInsightsName": "vigor-ai",
    "logAnalyticsName": "vigor-la",
    "containerRegistryName": "vigoracr",
    "databaseName": "vigor_db"
  },
  "resources": {
    "logAnalyticsWorkspace": {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('logAnalyticsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[if(equals(parameters('environment'), 'production'), 90, 30)]"
      }
    },
    "appInsights": {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
      },
      "dependsOn": [
        "logAnalyticsWorkspace"
      ]
    },
    "containerRegistry": {
      "condition": "[parameters('deployContainerRegistry')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "publicNetworkAccess": "Enabled",
        "policies": {
          "retentionPolicy": {
            "status": "enabled",
            "days": 7
          }
        }
      }
    },
    "keyVault": {
      "existing": true,
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "name": "[variables('keyVaultName')]"
    },
    "appServicePlan": {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "[parameters('appServiceSku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    "appService": {
      "condition": "[not(parameters('useDirectDeployment'))]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('backendWebAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "alwaysOn": "[equals(parameters('environment'), 'production')]",
          "linuxFxVersion": "PYTHON|3.11",
          "appCommandLine": "gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000",
          "appSettings": [
            {
              "name": "ENVIRONMENT",
              "value": "[parameters('environment')]"
            },
            {
              "name": "DEBUG",
              "value": "[if(not(equals(parameters('environment'), 'production')), 'true', 'false')]"
            },
            {
              "name": "SECRET_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=secret-key)', variables('keyVaultName'))]"
            },
            {
              "name": "DATABASE_URL",
              "value": "[format('postgresql://{0}:{1}@{2}:5432/{3}?sslmode=require', parameters('postgresAdminUsername'), parameters('postgresAdminPassword'), reference('db').outputs.fullyQualifiedDomainName.value, variables('databaseName'))]"
            },
            {
              "name": "OPENAI_API_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=openai-api-key)', variables('keyVaultName'))]"
            },
            {
              "name": "GEMINI_API_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=gemini-api-key)', variables('keyVaultName'))]"
            },
            {
              "name": "PERPLEXITY_API_KEY",
              "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=perplexity-api-key)', variables('keyVaultName'))]"
            },
            {
              "name": "LLM_PROVIDER",
              "value": "gemini"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference('appInsights').ConnectionString]"
            },
            {
              "name": "ADMIN_EMAIL",
              "value": "[parameters('adminEmail')]"
            }
          ]
        }
      },
      "dependsOn": [
        "appInsights",
        "appServicePlan",
        "db"
      ]
    },
    "staticWebApp": {
      "condition": "[not(parameters('useDirectDeployment'))]",
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2023-01-01",
      "name": "[variables('frontendAppName')]",
      "location": "Central US",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Free"
      },
      "properties": {}
    },
    "storageMod": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageModule",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('storageAccountName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "10283524075860816410"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            }
          },
          "resources": {
            "storageAccount": {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "publicNetworkAccess": "Disabled",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "defaultToOAuthAuthentication": true,
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true
              }
            }
          },
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "storageAccountKey": {
              "type": "securestring",
              "value": "[listKeys('storageAccount', '2023-01-01').keys[0].value]"
            }
          }
        }
      }
    },
    "keyVaultModule": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultDeployment",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('keyVaultName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "tenantId": {
            "value": "[tenant().tenantId]"
          },
          "enablePurgeProtection": {
            "value": "[or(equals(parameters('environment'), 'production'), equals(parameters('environment'), 'prod'))]"
          },
          "softDeleteRetentionInDays": "[if(equals(parameters('environment'), 'production'), createObject('value', 90), createObject('value', 30))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "9542085294831373171"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "tenantId": {
              "type": "string"
            },
            "enablePurgeProtection": {
              "type": "bool",
              "defaultValue": true
            },
            "softDeleteRetentionInDays": {
              "type": "int",
              "defaultValue": 90
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
                "publicNetworkAccess": "Enabled",
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "accessPolicies": []
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('name'))]"
            }
          }
        }
      }
    },
    "db": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dbModule",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "postgresServerName": {
            "value": "[variables('postgresServerName')]"
          },
          "postgresAdminUsername": {
            "value": "[parameters('postgresAdminUsername')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('postgresAdminPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "7734256894918855861"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "postgresServerName": {
              "type": "string"
            },
            "postgresAdminUsername": {
              "type": "string"
            },
            "postgresAdminPassword": {
              "type": "securestring"
            }
          },
          "variables": {
            "commonTags": {
              "Environment": "[parameters('environment')]",
              "ManagedBy": "bicep",
              "Component": "database"
            }
          },
          "resources": [
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2023-06-01-preview",
              "name": "[parameters('postgresServerName')]",
              "location": "[parameters('location')]",
              "tags": "[variables('commonTags')]",
              "sku": {
                "name": "Standard_B1ms",
                "tier": "Burstable"
              },
              "properties": {
                "version": "14",
                "administratorLogin": "[parameters('postgresAdminUsername')]",
                "administratorLoginPassword": "[parameters('postgresAdminPassword')]",
                "storage": {
                  "storageSizeGB": 32
                },
                "backup": {
                  "backupRetentionDays": 7,
                  "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                  "mode": "Disabled"
                },
                "network": {
                  "publicNetworkAccess": "Disabled"
                }
              }
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2023-06-01-preview",
              "name": "[format('{0}/{1}', parameters('postgresServerName'), 'vigor_db')]",
              "properties": {
                "charset": "utf8",
                "collation": "en_US.utf8"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresServerName'))]"
              ]
            }
          ],
          "outputs": {
            "fullyQualifiedDomainName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('postgresServerName')), '2023-06-01-preview').fullyQualifiedDomainName]"
            }
          }
        }
      }
    },
    "backendAppService": {
      "condition": "[parameters('useDirectDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "backendAppService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('backendWebAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "appServicePlanId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          },
          "pythonVersion": {
            "value": "3.11"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference('appInsights').InstrumentationKey]"
          },
          "appInsightsConnectionString": {
            "value": "[reference('appInsights').ConnectionString]"
          },
          "databaseHost": {
            "value": "[reference('db').outputs.fullyQualifiedDomainName.value]"
          },
          "databaseName": {
            "value": "vigordb"
          },
          "databaseUser": {
            "value": "[parameters('postgresAdminUsername')]"
          },
          "databasePassword": {
            "value": "[parameters('postgresAdminPassword')]"
          },
          "secretKey": {
            "value": "[parameters('secretKey')]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "keyVaultResourceGroupName": {
            "value": "[parameters('databaseResourceGroup')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "5729053713251896791"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "appServicePlanId": {
              "type": "string"
            },
            "pythonVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "databaseHost": {
              "type": "string"
            },
            "databaseName": {
              "type": "string"
            },
            "databaseUser": {
              "type": "string"
            },
            "databasePassword": {
              "type": "securestring"
            },
            "secretKey": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string"
            },
            "keyVaultResourceGroupName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "app,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "httpsOnly": true,
                "siteConfig": {
                  "linuxFxVersion": "[format('PYTHON|{0}', parameters('pythonVersion'))]",
                  "alwaysOn": true,
                  "minTlsVersion": "1.2",
                  "ftpsState": "Disabled",
                  "appSettings": [
                    {
                      "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                      "value": "true"
                    },
                    {
                      "name": "DATABASE_HOST",
                      "value": "[parameters('databaseHost')]"
                    },
                    {
                      "name": "DATABASE_NAME",
                      "value": "[parameters('databaseName')]"
                    },
                    {
                      "name": "DATABASE_USER",
                      "value": "[parameters('databaseUser')]"
                    },
                    {
                      "name": "DATABASE_PASSWORD",
                      "value": "[parameters('databasePassword')]"
                    },
                    {
                      "name": "SECRET_KEY",
                      "value": "[parameters('secretKey')]"
                    },
                    {
                      "name": "OPENAI_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/openai-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "GEMINI_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/gemini-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "PERPLEXITY_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/perplexity-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "FUNCTIONS_API_URL",
                      "value": "https://vigor-ai-functions.azurewebsites.net"
                    },
                    {
                      "name": "PORT",
                      "value": "8000"
                    },
                    {
                      "name": "WEBSITE_HTTPSCALEV2_ENABLED",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "1"
                    },
                    {
                      "name": "ENABLE_ORYX_BUILD",
                      "value": "true"
                    }
                  ],
                  "healthCheckPath": "/api/health"
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('appServiceKeyVaultAccess-{0}', parameters('name'))]",
              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.principalId]"
                  },
                  "tenantId": {
                    "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.tenantId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.1.42791",
                      "templateHash": "741835170902274848"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "tenantId": "[parameters('tenantId')]",
                            "objectId": "[parameters('principalId')]",
                            "permissions": {
                              "secrets": [
                                "get",
                                "list"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "accessPolicyId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', parameters('keyVaultName'), 'add')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "appServiceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
            },
            "appServiceName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "hostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01').defaultHostName]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "appInsights",
        "appServicePlan",
        "db"
      ]
    },
    "frontendStaticWebApp": {
      "condition": "[parameters('useDirectDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "frontendStaticWebApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('staticWebAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "skuName": {
            "value": "Standard"
          },
          "skuTier": {
            "value": "Standard"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "14963067401026665503"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "skuTier": {
              "type": "string",
              "defaultValue": "Standard"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/staticSites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]"
              },
              "properties": {
                "provider": "GitHub",
                "stagingEnvironmentPolicy": "Enabled",
                "allowConfigFileUpdates": true,
                "enterpriseGradeCdnStatus": "Enabled"
              }
            }
          ],
          "outputs": {
            "staticWebAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/staticSites', parameters('name'))]"
            },
            "staticWebAppName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "staticWebAppUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/staticSites', parameters('name')), '2022-09-01').defaultHostname]"
            }
          }
        }
      }
    },
    "aiFunctionApp": {
      "condition": "[parameters('useDirectDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "aiFunctionApp",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('functionAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          },
          "appServicePlanId": {
            "value": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
          },
          "appInsightsConnectionString": {
            "value": "[reference('appInsights').ConnectionString]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference('appInsights').InstrumentationKey]"
          },
          "storageAccountName": {
            "value": "[listOutputsWithSecureValues(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.Resources/deployments', 'storageModule'), '2022-09-01').storageAccountName]"
          },
          "storageAccountKey": {
            "value": "[listOutputsWithSecureValues(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('databaseResourceGroup')), 'Microsoft.Resources/deployments', 'storageModule'), '2022-09-01').storageAccountKey]"
          },
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "keyVaultResourceGroupName": {
            "value": "[parameters('databaseResourceGroup')]"
          },
          "runtime": {
            "value": "python"
          },
          "runtimeVersion": {
            "value": "3.11"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "13345825971696928714"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountKey": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string"
            },
            "keyVaultResourceGroupName": {
              "type": "string"
            },
            "runtime": {
              "type": "string",
              "defaultValue": "python"
            },
            "runtimeVersion": {
              "type": "string",
              "defaultValue": "3.11"
            },
            "appServicePlanId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-01-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[parameters('appServicePlanId')]",
                "siteConfig": {
                  "linuxFxVersion": "[format('Python|{0}', parameters('runtimeVersion'))]",
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('storageAccountName'), parameters('storageAccountKey'))]"
                    },
                    {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[toLower(parameters('name'))]"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "[parameters('runtime')]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "OPENAI_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/openai-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "GEMINI_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/gemini-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "PERPLEXITY_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(SecretUri={0}secrets/perplexity-api-key/)', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('keyVaultResourceGroupName')), 'Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                    },
                    {
                      "name": "BACKEND_API_URL",
                      "value": "https://vigor-backend.azurewebsites.net"
                    }
                  ],
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2"
                },
                "httpsOnly": true
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "functionKeyVaultAccess",
              "resourceGroup": "[parameters('keyVaultResourceGroupName')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "principalId": {
                    "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.principalId]"
                  },
                  "tenantId": {
                    "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.tenantId]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.36.1.42791",
                      "templateHash": "741835170902274848"
                    }
                  },
                  "parameters": {
                    "keyVaultName": {
                      "type": "string"
                    },
                    "principalId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2023-07-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "tenantId": "[parameters('tenantId')]",
                            "objectId": "[parameters('principalId')]",
                            "permissions": {
                              "secrets": [
                                "get",
                                "list"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "accessPolicyId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', parameters('keyVaultName'), 'add')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "functionAppId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
            },
            "functionAppName": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('name')), '2023-01-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "appInsights",
        "appServicePlan",
        "storageMod"
      ]
    },
    "keyVaultSecretsModule": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyVaultSecretsDeployment",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "secretKeyValue": {
            "value": "[parameters('secretKey')]"
          },
          "openaiApiKeyValue": {
            "value": "[parameters('openaiApiKey')]"
          },
          "geminiApiKeyValue": {
            "value": "[parameters('geminiApiKey')]"
          },
          "perplexityApiKeyValue": {
            "value": "[parameters('perplexityApiKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "3712403445683667525"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "secretKeyValue": {
              "type": "securestring"
            },
            "openaiApiKeyValue": {
              "type": "securestring",
              "defaultValue": ""
            },
            "geminiApiKeyValue": {
              "type": "securestring",
              "defaultValue": ""
            },
            "perplexityApiKeyValue": {
              "type": "securestring",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').tenantId]",
                    "objectId": "00000000-0000-0000-0000-000000000000",
                    "permissions": {
                      "secrets": [
                        "get",
                        "list",
                        "set"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'secret-key')]",
              "properties": {
                "value": "[parameters('secretKeyValue')]"
              }
            },
            {
              "condition": "[not(empty(parameters('openaiApiKeyValue')))]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'openai-api-key')]",
              "properties": {
                "value": "[parameters('openaiApiKeyValue')]"
              }
            },
            {
              "condition": "[not(empty(parameters('geminiApiKeyValue')))]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'gemini-api-key')]",
              "properties": {
                "value": "[parameters('geminiApiKeyValue')]"
              }
            },
            {
              "condition": "[not(empty(parameters('perplexityApiKeyValue')))]",
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'perplexity-api-key')]",
              "properties": {
                "value": "[parameters('perplexityApiKeyValue')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "keyVaultModule"
      ]
    },
    "appServiceKeyVaultAccess": {
      "condition": "[not(parameters('useDirectDeployment'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appServiceKeyVaultAccess",
      "resourceGroup": "[parameters('databaseResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[variables('keyVaultName')]"
          },
          "principalId": {
            "value": "[reference('appService', '2023-01-01', 'full').identity.principalId]"
          },
          "tenantId": {
            "value": "[tenant().tenantId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "741835170902274848"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), 'add')]",
              "properties": {
                "accessPolicies": [
                  {
                    "tenantId": "[parameters('tenantId')]",
                    "objectId": "[parameters('principalId')]",
                    "permissions": {
                      "secrets": [
                        "get",
                        "list"
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "accessPolicyId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults/accessPolicies', parameters('keyVaultName'), 'add')]"
            }
          }
        }
      },
      "dependsOn": [
        "appService",
        "keyVaultModule",
        "keyVaultSecretsModule"
      ]
    }
  },
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "backendUrl": {
      "type": "string",
      "value": "[if(parameters('useDirectDeployment'), format('https://{0}', reference('backendAppService').outputs.hostName.value), format('https://{0}', reference('appService').defaultHostName))]"
    },
    "frontendUrl": {
      "type": "string",
      "value": "[if(parameters('useDirectDeployment'), format('https://{0}', reference('frontendStaticWebApp').outputs.staticWebAppUrl.value), format('https://{0}', reference('staticWebApp').defaultHostname))]"
    },
    "postgresServerFqdn": {
      "type": "string",
      "value": "[reference('db').outputs.fullyQualifiedDomainName.value]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[if(parameters('deployContainerRegistry'), reference('containerRegistry').loginServer, '')]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[reference('appInsights').ConnectionString]"
    }
  }
}
