"""Initial schema with OAuth2 support

Revision ID: d538cf82b14a
Revises:
Create Date: 2025-06-26 22:16:50.320032

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = 'd538cf82b14a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_settings',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_settings_key'), 'admin_settings', ['key'], unique=True)
    op.create_table('ai_provider_priorities',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('provider_name', sa.String(), nullable=True),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('max_daily_cost', sa.Float(), nullable=True),
    sa.Column('max_weekly_cost', sa.Float(), nullable=True),
    sa.Column('max_monthly_cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_provider_priority', 'ai_provider_priorities', ['priority', 'is_enabled'], unique=False)
    op.create_index(op.f('ix_ai_provider_priorities_is_enabled'), 'ai_provider_priorities', ['is_enabled'], unique=False)
    op.create_index(op.f('ix_ai_provider_priorities_priority'), 'ai_provider_priorities', ['priority'], unique=False)
    op.create_index(op.f('ix_ai_provider_priorities_provider_name'), 'ai_provider_priorities', ['provider_name'], unique=False)
    op.create_table('ai_usage_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('provider_name', sa.String(), nullable=True),
    sa.Column('model_name', sa.String(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=True),
    sa.Column('input_tokens', sa.Integer(), nullable=True),
    sa.Column('output_tokens', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usage_cost_tracking', 'ai_usage_logs', ['created_at', 'cost', 'provider_name'], unique=False)
    op.create_index('idx_usage_date_provider', 'ai_usage_logs', ['created_at', 'provider_name'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_cost'), 'ai_usage_logs', ['cost'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_created_at'), 'ai_usage_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_endpoint'), 'ai_usage_logs', ['endpoint'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_model_name'), 'ai_usage_logs', ['model_name'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_provider_name'), 'ai_usage_logs', ['provider_name'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_success'), 'ai_usage_logs', ['success'], unique=False)
    op.create_index(op.f('ix_ai_usage_logs_user_id'), 'ai_usage_logs', ['user_id'], unique=False)
    op.create_table('budget_settings',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('total_weekly_budget', sa.Float(), nullable=True),
    sa.Column('total_monthly_budget', sa.Float(), nullable=True),
    sa.Column('alert_threshold_percentage', sa.Float(), nullable=True),
    sa.Column('auto_disable_on_budget_exceeded', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_user_id'), 'chat_messages', ['user_id'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('fitness_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='fitnesslevel'), nullable=True),
    sa.Column('goals', sa.JSON(), nullable=True),
    sa.Column('equipment', sa.Enum('NONE', 'MINIMAL', 'MODERATE', 'FULL', 'DUMBBELLS', 'BARBELL', 'RESISTANCE_BANDS', 'PULL_UP_BAR', 'FULL_GYM', name='equipment'), nullable=True),
    sa.Column('injuries', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('user_tier', sa.String(), nullable=True),
    sa.Column('tier_updated_at', sa.DateTime(), nullable=True),
    sa.Column('monthly_budget', sa.Float(), nullable=True),
    sa.Column('current_month_usage', sa.Float(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('oauth_provider_id', sa.String(), nullable=True),
    sa.Column('oauth_access_token', sa.Text(), nullable=True),
    sa.Column('oauth_refresh_token', sa.Text(), nullable=True),
    sa.Column('oauth_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(), nullable=True),
    sa.Column('mfa_backup_codes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_profiles_email'), 'user_profiles', ['email'], unique=True)
    op.create_index(op.f('ix_user_profiles_username'), 'user_profiles', ['username'], unique=True)
    op.create_table('user_tier_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tier_name', sa.String(), nullable=True),
    sa.Column('daily_limit', sa.Integer(), nullable=True),
    sa.Column('weekly_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_limit', sa.Integer(), nullable=True),
    sa.Column('monthly_budget', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tier_name')
    )
    op.create_table('ai_coach_messages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('response', sa.String(), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progress_metrics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('body_fat', sa.Float(), nullable=True),
    sa.Column('measurements', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_usage_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('daily_requests_used', sa.Integer(), nullable=True),
    sa.Column('weekly_requests_used', sa.Integer(), nullable=True),
    sa.Column('monthly_requests_used', sa.Integer(), nullable=True),
    sa.Column('last_reset_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_plans',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('exercises', sa.JSON(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='fitnesslevel'), nullable=True),
    sa.Column('equipment_needed', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('plan_id', sa.String(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('exercises', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['workout_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_logs')
    op.drop_table('workout_plans')
    op.drop_table('user_usage_limits')
    op.drop_table('progress_metrics')
    op.drop_table('ai_coach_messages')
    op.drop_table('user_tier_limits')
    op.drop_index(op.f('ix_user_profiles_username'), table_name='user_profiles')
    op.drop_index(op.f('ix_user_profiles_email'), table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index(op.f('ix_chat_messages_user_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_table('budget_settings')
    op.drop_index(op.f('ix_ai_usage_logs_user_id'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_success'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_provider_name'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_model_name'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_endpoint'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_created_at'), table_name='ai_usage_logs')
    op.drop_index(op.f('ix_ai_usage_logs_cost'), table_name='ai_usage_logs')
    op.drop_index('idx_usage_date_provider', table_name='ai_usage_logs')
    op.drop_index('idx_usage_cost_tracking', table_name='ai_usage_logs')
    op.drop_table('ai_usage_logs')
    op.drop_index(op.f('ix_ai_provider_priorities_provider_name'), table_name='ai_provider_priorities')
    op.drop_index(op.f('ix_ai_provider_priorities_priority'), table_name='ai_provider_priorities')
    op.drop_index(op.f('ix_ai_provider_priorities_is_enabled'), table_name='ai_provider_priorities')
    op.drop_index('idx_provider_priority', table_name='ai_provider_priorities')
    op.drop_table('ai_provider_priorities')
    op.drop_index(op.f('ix_admin_settings_key'), table_name='admin_settings')
    op.drop_table('admin_settings')
    # ### end Alembic commands ###
